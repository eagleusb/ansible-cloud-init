---
# type: bool
# descr: configure or not cloud-init via cloud.{cfg,cfg.d}
cloud_init_config: false

# type: list
# descr: init stage enabled modules
cloud_init_modules:
  - migrator
  - seed_random
  - bootcmd
  - write-files
  - growpart
  - resizefs
  - disk_setup
  - mounts
  - set_hostname
  - update_hostname
  - update_etc_hosts
  - ca-certs
  - rsyslog
  - users-groups
  - ssh

# type: list
# descr: config stage enabled modules
cloud_config_modules:
  - emit_upstart
  - ssh-import-id
  - locale
  - set-passwords
  - grub-dpkg
  - apt-pipelining
  - apt-configure
  - ntp
  - timezone
  - disable-ec2-metadata
  - runcmd

# type: list
# descr: final stage enabled modules
cloud_final_modules:
  - package-update-upgrade-install
  - ubuntu-drivers
  - scripts-vendor
  - scripts-per-once
  - scripts-per-boot
  - scripts-per-instance
  - scripts-user
  - ssh-authkey-fingerprints
  - keys-to-console
  - phone-home
  - final-message
  - power-state-change

# type: list
# descr: list of users to add
# see https://cloudinit.readthedocs.io/en/latest/topics/examples.html#including-users-and-groups
cloud_init_users:
  - default

# type: list
# descr: list of groups to add
cloud_init_groups: []

# type: dict
# descr: main cloud-init configuration (cloud.cfg)
# see https://cloudinit.readthedocs.io/en/latest/topics/examples.html
cloud_init_configuration:
  groups: "{{ cloud_init_groups | default([]) }}"
  users: "{{ cloud_init_users | default(['default']) }}"
  disable_root: false
  preserve_hostname: false
  manage_etc_hosts: false
  manage_resolv_conf: false
  datasource_list: []
  datasource: []
  packages: []

  # The modules that run in the 'init' stage
  cloud_init_modules: "{{ cloud_init_modules }}"

  # The modules that run in the 'config' stage
  cloud_config_modules: "{{ cloud_config_modules }}"

  # The modules that run in the 'final' stage
  cloud_final_modules: "{{ cloud_final_modules }}"

  system_info:
    distro: ubuntu
    network:
      renderers: ['netplan', 'eni']
    default_user:
      name: ubuntu
      lock_passwd: True
      gecos: Ubuntu
      groups: [adm, audio, cdrom, dialout, dip, floppy, netdev, plugdev, sudo, video]
      sudo: ["ALL=(ALL) NOPASSWD:ALL"]
      shell: "/bin/bash"
    ntp_client: auto
    paths:
      cloud_dir: /var/lib/cloud/
      templates_dir: /etc/cloud/templates/
      upstart_dir: /etc/init/
    package_mirrors: []
    ssh_svcname: ssh

# type: bool
# descr: disable or not cloud-init after the first boot
cloud_init_disable: false

# type: bool
# descr: cleanup or not cloud-init logs and seed files
cloud_init_clean: false

# type: list
# descr: cloud-init enabled datasources
cloud_init_datasources:
  - NoCloud
  - MAAS
  - None

# type: list
# descr: commands executed very early in the boot process
cloud_init_bootcmd: []

# type: list
# descr: commands executed at rc.local level during first boot
cloud_init_runcmd: []

# type: dict
# descr: add and manage ca certificates
cloud_init_cacerts:
  remove_defaults: false
  certs: []

# type: dict
# descr: package management by cloud-init, mainly apt
cloud_init_package:
  package_update: false
  package_upgrade: false
  package_reboot_if_required: false
  packages: []

# type: dict
# descr: eventually call an url at final stage
cloud_init_phone_home:
  url:
  post:
  tries:

# type: list
# desc: per-once scripts to drop
cloud_init_per_once_scripts: []
